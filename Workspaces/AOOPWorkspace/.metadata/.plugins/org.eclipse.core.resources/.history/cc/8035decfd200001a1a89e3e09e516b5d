package ie.gmit.sw;

import java.util.Date;

public class DefaultTypeator implements Typeator, Cloneable{
	private String s;
	private Date d;
	
	public DefaultTypeator(String s, Date d) {
		super();
		this.s = s;
		setDate(d);
	}

	@Override
	public void setName(String s) {
		this.s = s;
	}

	@Override
	public String getName() {
		return this.s;
	}

	@Override
	public void setDate(Date d) {
		this.d = copy(d);
	}

	@Override
	public Date getDate() {
		return copy(this.d);
	}
	
	private Date copy(Date date) {
		return new Date(date.getTime());
	}
	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((s == null) ? 0 : s.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		DefaultTypeator other = (DefaultTypeator) obj;
		if (s == null) {
			if (other.s != null)
				return false;
		} else if (!s.equals(other.s))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return this.getClass().getSimpleName();
	}

	@Override
	protected void finalize() throws Throwable {
		System.out.println(this.toString() + " about to be GC'd");
	}

	@Override
	protected Object clone() throws CloneNotSupportedException {
		return new DefaultTypeator(s, copy(d));
	}
}